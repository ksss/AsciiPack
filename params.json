{"name":"AsciiPack","tagline":"AsciiPack is an object serialization inspired by MessagePack.","body":"# AsciiPack\r\n\r\nAsciiPack is an object serialization inspired by MessagePack.\r\n\r\nAsciiPack is use easy by Web. because all serialize object is only writed ascii strings.\r\n\r\n    JSON is 27 chars:\r\n    {\"compact\":true,\"binary\":0}\r\n\r\n    AsciiPack is 19 chars:\r\n    r2NcompactYMschema0\r\n        r2 => map of length 2.\r\n        Ncompact => fixbin of length 7 and value is \"compact\".\r\n        Y => true.\r\n        Mbinary => fixbin of length 6 abd value is \"binary\".\r\n        0 => fixint value is 0.\r\n\r\n## Formats\r\n\r\n### Overview\r\n\r\n<table>\r\n  <tr><th>format name</th><th>first char</th></tr>\r\n  <tr><td>int 4</td><td>a</td></tr>\r\n  <tr><td>int 8</td><td>b</td></tr>\r\n  <tr><td>int 16</td><td>c</td></tr>\r\n  <tr><td>int 32</td><td>d</td></tr>\r\n  <tr><td>int 64</td><td>e</td></tr>\r\n  <tr><td>(blank)</td><td>f</td></tr>\r\n  <tr><td>uint 8</td><td>g</td></tr>\r\n  <tr><td>uint 16</td><td>h</td></tr>\r\n  <tr><td>uint 32</td><td>i</td></tr>\r\n  <tr><td>uint 64</td><td>j</td></tr>\r\n  <tr><td>float 32</td><td>k</td></tr>\r\n  <tr><td>float 64</td><td>l</td></tr>\r\n  <tr><td>(blank)</td><td>m</td></tr>\r\n  <tr><td>bin 8</td><td>n</td></tr>\r\n  <tr><td>bin 16</td><td>o</td></tr>\r\n  <tr><td>bin 32</td><td>p</td></tr>\r\n  <tr><td>(blank)</td><td>q</td></tr>\r\n  <tr><td>map 4</td><td>r</td></tr>\r\n  <tr><td>map 8</td><td>s</td></tr>\r\n  <tr><td>map 16</td><td>t</td></tr>\r\n  <tr><td>map 32</td><td>u</td></tr>\r\n  <tr><td>array 4</td><td>v</td></tr>\r\n  <tr><td>array 8</td><td>w</td></tr>\r\n  <tr><td>array 16</td><td>x</td></tr>\r\n  <tr><td>array 32</td><td>y</td></tr>\r\n  <tr><td>(blank)</td><td>z</td></tr>\r\n  <tr><td>positive fixint</td><td>0-9A-F</td></tr>\r\n  <tr><td>fixbin</td><td>G-V</td></tr>\r\n  <tr><td>nil</td><td>W</td></tr>\r\n  <tr><td>false</td><td>X</td></tr>\r\n  <tr><td>true</td><td>Y</td></tr>\r\n  <tr><td>(blank)</td><td>Z</td></tr>\r\n</table>\r\n\r\n### Notation in diagrams\r\n    All object serialize format.\r\n    key | [length] | [variable]\r\n\r\n    `F` is Hexadecimal number by one char.\r\n    `D` is Decimal number.\r\n\r\n### int\r\n    int 4:\r\n    a | F\r\n\r\n    int 8:\r\n    b | FF\r\n\r\n    int 16:\r\n    c | FFFF\r\n\r\n    int 32:\r\n    d | FFFFFFFF\r\n\r\n    int 64:\r\n    e | FFFFFFFFFFFFFFFF\r\n\r\n    positive fixint:\r\n    0-9A-F\r\n\r\n    uint 8:\r\n    g | FF\r\n\r\n    uint 16:\r\n    h | FFFF\r\n\r\n    uint 32:\r\n    i | FFFFFFFF\r\n\r\n    uint 64:\r\n    j | FFFFFFFFFFFFFFFF\r\n\r\n### float\r\nValue abide IEEE 754 format.\r\n\r\n    float 32:\r\n    k | FFFFFFFF\r\n\r\n    float 64:\r\n    l | FFFFFFFFFFFFFFFF\r\n\r\n### bin\r\n    fixbin:\r\n    G-V | data\r\n\r\n    bin 8:\r\n    n | FF | data\r\n\r\n    bin 16:\r\n    o | FFFF | data\r\n\r\n    bin 32:\r\n    p | FFFFFFFF | data\r\n\r\n### map\r\n    map 4:\r\n    r | F | N * (key + value)\r\n\r\n    map 8:\r\n    s | FF | N * (key + value)\r\n\r\n    map 16:\r\n    t | FFFF | N * (key + value)\r\n\r\n    map 32:\r\n    u | FFFFFFFF | N * (key + value)\r\n\r\n    * N is the size of map\r\n\r\n### array\r\n    array 4:\r\n    v | F | N * value\r\n\r\n    array 8:\r\n    w | FF | N * value\r\n\r\n    array 16:\r\n    x | FFFF | N * value\r\n\r\n    array 32:\r\n    y | FFFFFFFF | N * value\r\n\r\n    * N is the size of array\r\n\r\n### nil\r\n    nil:\r\n    W\r\n\r\n### boolean\r\n    false:\r\n    X\r\n\r\n    true:\r\n    Y\r\n\r\n## Comparison\r\n\r\n<table>\r\n  <tr><th>Serializer</th><th>Length</th><th>Speed</th><th>Readability</th></tr>\r\n  <tr><td>JSON</td><td>×</td><td>△</td><td>○</td></tr>\r\n  <tr><td>MessagePack</td><td>○</td><td>○</td><td>×</td></tr>\r\n  <tr><td>AsciiPack</td><td>△</td><td>×</td><td>△</td></tr>\r\n</table>\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}